0
 GCE <- read.table(paste(path,gce.files[243],sep="/"),sep="\t",header=FALSE,fill=TRUE)
dim(GCE)
 GCE <- read.table(paste(path,gce.files[243],sep="/"),sep="\t",header=FALSE)
dim(GCE)
paste(path,gce.files[243],sep="/")
fname <-paste(path,gce.files[243],sep="/")
GCE <- read.table(fname,sep="\t",header=FALSE)
dim(GCE)
fname
M
start()
1
M
q
0
source("gorand.R")
start()
1
len
M
?stopifnot
0
GCE <- read.table(fname,sep="\t",header=FALSE)
0
fname
fname <-paste(path,gce.files[243],sep="/")
fname
GCE <- read.table(fname,sep="\t",header=FALSE)
dim(GCE)
quit()
n
load("../results/gorand/2006-12-21_13-28-26.Rdata"")
)
")
load("../results/gorand/2006-12-21_13-28-26.Rdata")
ls()
L<-load("../results/gorand/2006-12-21_13-28-26.Rdata")
L
ls()
L
source("gorand.R")
ls()
source("gorand.R")
source("gorand.R")
ls()
p.Value
p.Values
rm(list=ls())
outputDir <- "../results/gorand"
terminate <- function () {
  save.image(file=sprintf("%s/%s.RData",outputDir,timestamp())) # save workspace
  quit(save="yes")
}
#options( error = recover ) # switch debugging on
options( error = terminate )
source("utils.R")
######################################################################
## Transforms a go identifier "GO:xxxx" to a number xxx and the basic
## node "all" to 0.
trf.go.id <- function( go.id )
  as.integer(gsub("all","0",gsub("GO:","",as.character(go.id))))
## Extracts the experiment number from a file name
##
extractNum <- function (str) {
  n <- as.integer(strsplit(strsplit(str,"_")[[1]][1],"-")[[1]][2])
  if( is.na(n) )
    n <- -1
  return(n)
}
path <- "results/gorand"
se.files <- dir(path,pattern=".*_se.txt")
gce.files <- gsub("_se.txt","_gce.txt",se.files)
numCat <- c()
numTotal <- c()
minSize <- 3
maxSize <- Inf
numBoot <- 1000 # bootstrapping runs
RESULT <- matrix(nrow=0,ncol=7)
colnames(RESULT) <- c("dataSetID","numSets", "numElements", "numIntersections","pValueBoot","meanBoot","sdBoot")
i=42
  num <- extractNum(se.files[i])
  SE <- read.table(paste(path,se.files[i],sep="/"),
                   sep="\t",header=TRUE,row.names=NULL,check.names=FALSE,fill=TRUE,quote="",dec=",")
  SE$"GO ID" <- unfactor.int(SE$"GO ID")
  GCE <- read.table(paste(path,gce.files[i],sep="/"),
                    sep="\t",header=FALSE,fill=TRUE,quote="",as.is=TRUE,dec=",")
  colnames(GCE) <- c("GO ID","Name","GeneID","Direction","GeneID2")
  GCE$"GO ID" <- trf.go.id(GCE$"GO ID")
  GCE$GeneID <- as.character(GCE$GeneID)
  ## filter GO terms
  SE <- SE[order(SE$"P-Value (Changed)"),]
  p.Values <- SE$"P-Value (Changed)"
  num.Total <- SE$"Total"
  num.Change <- SE$"Change"
  L <- which((p.Values <= 0.05) & (num.Total >= 40) & (num.Total <= 140))
  L <- L[1:min(maxSize,length(L))]
  SE <- SE[L,]
length(L)
  num <- extractNum(se.files[i])
  SE <- read.table(paste(path,se.files[i],sep="/"),
                   sep="\t",header=TRUE,row.names=NULL,check.names=FALSE,fill=TRUE,quote="",dec=",")
  SE$"GO ID" <- unfactor.int(SE$"GO ID")
  GCE <- read.table(paste(path,gce.files[i],sep="/"),
                    sep="\t",header=FALSE,fill=TRUE,quote="",as.is=TRUE,dec=",")
  colnames(GCE) <- c("GO ID","Name","GeneID","Direction","GeneID2")
  GCE$"GO ID" <- trf.go.id(GCE$"GO ID")
  GCE$GeneID <- as.character(GCE$GeneID)
  ## filter GO terms
  SE <- SE[order(SE$"P-Value (Changed)"),]
  p.Values <- SE$"P-Value (Changed)"
  num.Total <- SE$"Total"
  num.Change <- SE$"Change"
  L <- which((p.Values <= 0.05) & (num.Total >= 10) & (num.Total <= 600))
  L <- L[1:min(maxSize,length(L))]
  SE <- SE[L,]
length(L)
maxSize
min(maxSize,length(L)
)
    n <- length(L)
    numCat <- c(numCat,n)
    numTotal <- c(numTotal,SE[,"Total"])
    M <- merge(SE,GCE,by="GO ID",all.x=TRUE,all.y=FALSE)
    stopifnot(all(!is.na(M$GeneID)))
    A <- split(M$GeneID,M$"GO ID") # create set family A
    stopifnot(length(A)==n)
    count <- count.intersections(A)
count
