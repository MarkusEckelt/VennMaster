1+1
Sys.putenv("http_proxy"="http://127.0.0.1:8080")
require(e1071)
t<-seq(0,1,100)
plot(t,t^2)
t<-seq(0,1,length=100)
plot(t,t^2)
x<-sourc
x<-read.table("~/Desktop/tt1.txt")
x
plot(x$V1,x$V2)
plot(x$V1,x$V2); lines(x$V1,x$V3); lines(x$V1,x$V4)
plot(x$V1,x$V2,ylim=c(0,10)); lines(x$V1,x$V3); lines(x$V1,x$V4)
plot(x$V1,x$V2,ylim=c(0,10)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt"); plot(x$V1,x$V2,ylim=c(0,10)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt"); plot(x$V1,x$V2,ylim=c(0,12)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt"); plot(x$V1,x$V2,ylim=c(0,15)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt",type="l"); plot(x$V1,x$V2,ylim=c(0,15)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt",type="-"); plot(x$V1,x$V2,ylim=c(0,15)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt",pty="l"); plot(x$V1,x$V2,ylim=c(0,15)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt",pty="-"); plot(x$V1,x$V2,ylim=c(0,15)); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt"); plot(x$V1,x$V2,ylim=c(0,15),type="l"); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4)
 x<-read.table("~/Desktop/tt1.txt"); plot(x$V1,x$V2,ylim=c(0,15),type="l"); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4,col='red')
 x<-read.table("~/Desktop/tt1.txt"); plot(x$V1,x$V2,ylim=c(0,20),type="l"); lines(x$V1,x$V3,col='blue'); lines(x$V1,x$V4,col='red')
library(pamr)
data(Kahn)
data(kahn)
data(khan)
ls()
khan
khan[1,]
khan[1,3:ncol(khan)]
factor(khan[1,3:ncol(khan)])
as.factor(khan[1,3:ncol(khan)])
unlist(khan[1,3:ncol(khan)])
typeof(khan[1,3:ncol(khan)])
as.vector(khan[1,3:ncol(khan)])
as.factor(as.vector(khan[1,3:ncol(khan)]))
as.vector(khan[1,3:ncol(khan)])
as.integer(as.vector(khan[1,3:ncol(khan)]))
x <- khan[1,3:ncol(khan)]
levels(x)
levels(khan)
as.factor(x)
x
x[1]
levels(x[1])
x[1]
x[[1]]
as.matrix(x)
as.factor(as.matrix(x))
Sys.putenv("http_proxy"="http://127.0.0.1:8080")
installed.packages()
Sys.putenv("http_proxy"="http://127.0.0.1:8080")
citation("pamr")
citation("glad")
citation("GLAD")
library(GLAD)
citation("GLAD")
citation(GLAD)
citation("GLAD")
citation("glad")
citation("DNAcopy")
library(GLAD)
citation("GLAD")
S<-read.table("state.txt")
S
which(S[,1]==1)
size(S)
dim(S)I
dim(S)
dim(S[,S[,1]==1])
dim(S[,S[,1]==1])
S[,S[,1]==1]
dim(S[S[,1]==1,])
S[S[,1]==1,]
S<-read.table("state.txt")
dim(S)
S
read("plotSwarm.R")
source("plotSwarm.R")
plot(x[,id==1])
plot(x[id==1,])
plot(x[id==1,],type="l")
doc order
?order
fitness
hist(fitness)
?split
split(fitness,id)
sapply(max,split(fitness,id))
sapply(split(fitness,id),max)
unlist(sapply(split(fitness,id),max))
min(id)
?plot.window
source("plotSwarm.R")
wait
pause
sleep
?sleep
?wait
?prompt
readline()
source("plotSwarm.R")
source("plotSwarm.R")
source("plotSwarm.R")
doc plot
?plot.new
source("plotSwarm.R")
plot(c(1,1))
lines(c(1,2),c(1,1))
lines(c(1,2,2),c(1,1,2))
plot.new()
plot.clear()
dev.off()
lines(c(1,2,2),c(1,1,2))
plot.new()
lines(c(1,2,2),c(1,1,2))
plot.window(xlim=c(1,2),ylim=c(1,2)) lines(c(1,2,2),c(1,1,2))
plot.new(); plot.window(xlim=c(1,2),ylim=c(1,2)); lines(c(1,2,2),c(1,1,2))
plot.new(); plot.window(xlim=c(1,2),ylim=c(1,2)); lines(c(1,2,2),c(1,1,2),col=c("red","green"))
?lines
source("plotSwarm.R")
max(id)
min(id)
source("plotSwarm.R")
?lines
?ts
ts(1:10, frequency = 4, start = c(1959, 2)) # 2nd Quarter of 1959#
print( ts(1:10, freq = 7, start = c(12, 2)), calendar = TRUE) # print.ts(.)#
## Using July 1954 as start date:#
gnp <- ts(cumsum(1 + round(rnorm(100), 2)),#
          start = c(1954, 7), frequency = 12)#
plot(gnp) # using 'plot.ts' for time-series plot
z <- ts(matrix(rnorm(300), 100, 3), start=c(1961, 1), frequency=12)#
class(z)#
plot(z)#
plot(z, plot.type="single", lty=1:3)#
#
## A phase plot:#
plot(nhtemp, c(nhtemp[-1], NA), cex = .8, col="blue",#
     main = "Lag plot of New Haven temperatures")#
## a clearer way to do this would be#
## Not run: #
plot(nhtemp, lag(nhtemp, 1), cex = .8, col="blue",#
     main = "Lag plot of New Haven temperatures")#
## End(Not run)
source("plotSwarm.R")
range(c(1,2,3))
?png
capabilities()
capabilities("png")
sprintf("pso-%.3d",5)
?png
source("plotSwarm.R")
source("plotSwarm.R")
?png
Devices()
Dev
gif
?gif
jpeg("out.jpeg")
